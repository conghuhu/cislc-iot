<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 第一种mybatis逆向生成xml配置 -->
<generatorConfiguration>
    <!--<properties resource="bootstrap.yml" />-->
    <context id="sqlserverTables" targetRuntime="MyBatis3">
        <!-- 生成的pojo，将implements Serializable-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 拉取表信息的数据库链接URL、用户名、密码 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://39.100.138.71:3306/shadow"
                        userId="root"
                        password="cislc@sdu.">
        </jdbcConnection>

        <!--
        默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
        -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--
        生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，
        也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下
        -->
        <!--<javaModelGenerator targetPackage="com.joey.mybaties.test.pojo" targetProject="MAVEN">-->
        <javaModelGenerator targetPackage="com.shadow.web.model.product" targetProject="./src/main/java">
            <property name="enableSubPackages" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格  -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!--对应的mapper.xml文件  -->
        <sqlMapGenerator targetPackage="product"
                         targetProject="./src/main/resources/mapper">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 对应的Mapper接口类文件 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.shadow.web.mapper.product"
                             targetProject="./src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 列出要生成代码的表，这里配置的是不生成Example文件 -->
        <!-- <table tableName="vd_inforsales" domainObjectName="InforSales"
               enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false">
            <property name="useActualColumnNames" value="false"/>
            针对数据类型为text的会默认生成withblob的map文件，用此配置进行指定来规避，只针对text类型
            <columnOverride column="sainfors" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="sacomminfors" javaType="java.lang.String" jdbcType="VARCHAR" />
        </table> -->

         <table tableName="am_product" domainObjectName="Product" />
<!--         <table tableName="am_device_prop_array" domainObjectName="DevicePropArray" />-->
<!--         <table tableName="am_device_prop_child" domainObjectName="DevicePropChild" />-->
<!--         <table tableName="am_device_property" domainObjectName="DeviceProp" />-->
        <!--  <table tableName="cm_role" domainObjectName="Role" />
          <table tableName="cm_permission" domainObjectName="Permission"/>
          <table tableName="cm_user_role" domainObjectName="UserRole"/>
          <table tableName="cm_role_permission" domainObjectName="RolePermission"/>-->
<!--        <table tableName="cm_function" domainObjectName="Function"/>-->
<!--        <table tableName="cm_permission_function" domainObjectName="PermissionFunction"/>-->


    </context>
</generatorConfiguration>
